#!/usr/bin/perl

# ----------------------------------------------------------------------
# Examples:
#  cd .../Bmm/CmsswAnalysis/test/bmm4/jobs/v01; $BMMBASE/perl/runAll -p
#  cd .../Bmm/CmsswAnalysis/test/bmm4/jobs/v01; $BMMBASE/perl/runAll -p -s Summer15_private
#  cd .../Bmm/CmsswAnalysis/test/bmm4/jobs/v01; $BMMBASE/perl/runAll -t $BMMBASE../../150826bmm4.tar.gz -s Summer15_private
#
#  cd .../Bmm/RootAnalysis/macros/chains/v01; $BMMBASE/perl/runAll -p 
#  cd .../Bmm/RootAnalysis/macros/chains/v01; $BMMBASE/perl/runAll -p -s bmm-v01-Run2015B__Charmonium__PromptReco-v1
#
#  cd .../Bmm/RootAnalysis/macros/chains/v01; $BMMBASE/perl/runAll -t 
#
#
# ----------------------------------------------------------------------

use lib '/shome/ursl/perl/modules/Tie-IxHash-1.23/lib'; # this is not nice ...
use Tie::IxHash;

use Getopt::Std;
getopts('cdlo:ps:t:x:');

my $dir        = ".";
if ($opt_o) {
    $dir = $opt_o;
}

my $BMMBASE = $ENV{BMMBASE};


# ----------------------------------------------------------------------
# -- read in (and eval) configuration: 
#      $runCommand
#      %jobs
#      %catalogs
open(IN, "$dir/runAll.jobs") || die "Cannot read $dir/runAll.jobs";
while (<IN>) {
    $gProgram .= "  ".$_; 
}
eval $gProgram;


# -- create (split) files
my $goback = 0; 
if ($opt_p) {
    foreach $j (keys %catalogs) {
	if ($opt_s && !($j =~ /$opt_s/)) {next;}
	$goback = 0; 
	if (-d "$j") {
	    chdir("$j");
	    $goback = 1; 
	} 
	system("$catalogs{$j}");
	if ($goback == 1) {
	    chdir("..");
	}
    }
    
    exit(0); 
}


# ----------------------------------------------------------------------
# -- submit the jobs
foreach $j (keys %jobs) {
    if ($opt_s && !($j =~ /$opt_s/)) {next;}
    if ($opt_c) {
	$jobs{$j} =~/-o\s*(.*)\s-/; $rootfile = $1;  
	if (-e $rootfile) {
	    $size = -s $rootfile;
	    print "$rootfile with size $size exists already, do not resubmit \n";
	    if ($size > 1000) {
		next;
	    }
	} else {
	    print "->$rootfile<- not found\n";
	    # do nothing and proceed with submission
	}
    }
    if ($opt_l) {
	$jobs{$j} =~ s/\|\& tee/>/g;
	$command = "nice $runCommand $jobs{$j} $opt_x >>$dir/runAll.log";
	$command = "nice $runCommand $jobs{$j} $opt_x";
	print "$command\n";
	if (!$opt_d) {
	    system($command);
	}
    } else {
	# -- for CONDOR setups: 
	if (0) {
	    &createCondorScript($j); 
	    $command = "export JOB='$runCommand $jobs{$j} $opt_x'; export LOG=$j; condor_submit condor-$j.txt";
	    print "$command\n";
	    if (!$opt_d) {
		system($command);
		unlink("condor-$j.txt");
	    }
	}
	
	# -- for SGE at PSI
	if (1) {
	    print "$jobs{$j}\n";
	    if (!$opt_d) {
		system("$jobs{$j}");
	    }
	}
    }
}

# ----------------------------------------------------------------------
sub createCondorScript {
    ($log) = @_;
    open(OUT, ">condor-$j.txt")  || die "Cannot open condor-$j.txt\n";
    print OUT <<"EOF";
executable  =  condorRunLq
universe    =  vanilla
log         =  /STORE/LQ/ursl/$j.condor
output      =  /STORE/LQ/ursl/$j.log
initialdir  =  /users/ursl/lq/lq0
getenv      =  True
queue
EOF
close OUT;
}
