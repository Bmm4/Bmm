#!/usr/bin/env perl

# Usage: splitCheckedChain [-c] [-n 100000] chain1 chain2 chain3 ...
# ------
#            -n specifies how many events should go into one split chain
#            -c counts how many events were put into a chain (for verification)
#
# ----------------------------------------------------------------------
# Send all questions, wishes and complaints to the
#
# Author    Urs Langenegger <urslangenegger@gmail.com>
# ----------------------------------------------------------------------

use Getopt::Std;
getopts('cn:');


if ($opt_c) {
    my $totalcnt = 0;
    foreach $file (@ARGV) {
	$cnt = countChain($file);
	$totalcnt += $cnt;
	print "$file $cnt\n";
    }
    die "Total: $totalcnt\n";
}

foreach $file (@ARGV) {
    &splitChain($file, $opt_n);
}


# ----------------------------------------------------------------------
sub splitChain() {
    ($cifile, $nmax) = @_;
    open(IN, "$cifile") || die "Cannot open $cifile\n";
    @lines = <IN>;
    close(IN);
    my $ccnt= "00";
    # -- split off possible path
    $tmp = $cifile; @tmp = split(/\//, $cifile); $cfile = pop(@tmp);

    # -- for the final cross check
    my $splitChainCnt = 0;
    my $bigChainCnt = 0;

    open(OUT, ">$cfile-$ccnt") || die "Cannot open $cfile-$ccnt\n";

    my $icnt = 0;
    my $fcnt = 0;
    my $fileOpen = 1;
    for ($iline = 0; $iline <= $#lines; $iline++) {
	($iname, $icnt) = split(/\s{1,99}/, $lines[$iline]);
	$bigChainCnt += $icnt;
	print OUT "$iname $icnt\n";
	$fcnt += $icnt;
	if ($fcnt > $nmax) {
	    $splitChainCnt += $fcnt;
	    print "  $cfile-$ccnt: $fcnt\n";
	    close(OUT);
	    $fileOpen = 0;
	    $ccnt++;
	    if ($iline < $#lines) {
		open(OUT, ">$cfile-$ccnt") || die "Cannot open $cfile-$ccnt\n";
		$fileOpen = 1;
		$fcnt = 0;
	    }
	}
    }
    if ($fileOpen) {
	$splitChainCnt += $fcnt;
	print "  $cfile-$ccnt: $fcnt\n";
	close(OUT);
    }

    print "Big chain has $bigChainCnt <-> $splitChainCnt from split chains\n";

}


# ----------------------------------------------------------------------
sub countChain() {
    ($cfile, $nmax) = @_;
    open(IN, "$cfile") || die "Cannot open $cfile\n";
    @lines = <IN>;
    close(IN);
    my $cnt = 0;
    foreach $line (@lines) {
	($fname, $fcnt) = split(/\s{1,99}/, $line);
	$cnt += $fcnt;
    }
    return $cnt;
}
