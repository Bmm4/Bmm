#!/usr/bin/perl
# ----------------------------------------------------------------------
# runPlots  run sonmething for all years  or for specific setup testing
# =======
#
# Usage examples
# ==============
#
# $BMMBASE/perl/runPlots -p results -m ana
# $BMMBASE/perl/runPlots -s 1
#
# ----------------------------------------------------------------------
# Send all questions, wishes and complaints to the
#
# Author    Urs Langenegger <urslangenegger@gmail.com>
# ----------------------------------------------------------------------
use lib "$ENV{BMMBASE}/perl/modules/Tie-IxHash-1.23/lib";
use Tie::IxHash;

use Getopt::Std;
getopts('dp:m:n:s:t:x:');

my @years = ("2011", "2012", "2016BF", "2016GH");

my $optp = "";
if ($opt_p) {
    $optp = "-p $opt_p";
}

my $optm = "";
if ($opt_m) {
    $optm = "-m $opt_m";
}

# -- time to wait before checking again
my $optt = 20;
if ($opt_t) {
    $optt = $opt_t;
}

# -- how many jobs in parallel
my $optn = 8;
if ($opt_n) {
    $optn = $opt_n;
}

my $optx = "";
if ($opt_x) {
    $optx = "-d $opt_x";
}

if (2 == $opt_s) {
    my @list12 = (
	"2011",
	"2012",
	"2016BF-00",
	"2016GH-00"
	);
    foreach $idir (@list12) {
	$dir = $idir;
	if ($opt_x && ($dir ne $opt_x)) {
	    next;
	}
	($year = $idir) =~ s/-[0-9]{2}//g;
	if (!$opt_d) {system($command);}
	$command = "bin/runPlot -y $year -d $dir -p results -m fill  >& $dir/results-fill.log &";
	print "$command\n";
	if (!$opt_d) {system($command);}
	$command = "bin/runPlot -y $year -d $dir -p overlays -m all  >& $dir/overlays-all.log &";
	print "$command\n";
	if (!$opt_d) {system($command);}
	$command = "bin/runPlot -y $year -d $dir -p bdt -m all  >& $dir/bdt-all.log &";
	print "$command\n";
	if (!$opt_d) {system($command);}
    }
    exit(0);
}


if (3 == $opt_s) {
    my @list12 = (
	"2016BF-00",
	"2016GH-00"
	);
    foreach $idir (@list12) {
	$dir = $idir;
	if ($opt_x && ($dir ne $opt_x)) {
	    next;
	}
	($year = $idir) =~ s/-[0-9]{2}//g;
	print "dir = $dir year = $year\n";
	system("bin/runPlot -y $year -d $dir -p results -m bdt  >& $dir/results-bdt.log &");
    }
    exit(0);
}

if (12 == $opt_s) {
    my @list12 = (
	"GH-2069",
	"GH-1779",
	"GH-1199",
	"GH-2359",
	"GH-4309",
	"GH-3739",
	"GH-4689",
	"GH-1489",
	"GH-2929",
	"GH-4829",
	"GH-4029",
	"GH-4879",
	"GH-4869",
	"GH-4909",
	"GH-4889",
	"GH-4899",
	"GH-3349",
	"BF-3349",
	"GH-5019",
	"GH-5399",
	"GH-5219",
	"BF-1079",
	"GH-1079",
	"BF-2389",
	"GH-2959",
	"BF-2959",
	"GH-4069",
	"BF-4069",
	"BF-4469",
	"GH-4469",
	"GH-3269",
	"BF-3269",
	"GH-5349",
	"BF-1269",
	"GH-3989",
	"BF-3989",
	"BF-2349",
	"GH-2349",
	"BF-4349",
	"BF-2709",
	"BF-3039",
	"BF-3619",
	"BF-3509",
	"BF-2079",
	"GH-2469",
	"GH-2079",
	"BF-2469",
	"GH-5559",
	"BF-3389",
	"GH-3389",
	"GH-5549",
	"BF-3319",
	"GH-1509",
	"BF-1509",
	"BF-1149",
	"BF-4619",
	"BF-4439",
	"BF-4789",
	"GH-4789",
	"BF-3139",
	"BF-2639",
	"BF-1939",
	"BF-2599",
	"BF-2319",
	"GH-5459",
	"BF-2669",
	"BF-4289",
	"GH-5539",
	"GH-2239",
	"BF-2239",
	"BF-2479",
	"BF-4749",
	"BF-2159",
	"BF-1169",
	"BF-2189",
	"BF-1669",
	"BF-4409",
	"BF-3559",
	"BF-1609",
	"BF-2049",
	"BF-3069",
	"GH-3069",
	"BF-4809",
	"BF-3409",
	"BF-3909",
	"BF-2519",
	"BF-4149",
	"BF-1309",
	"BF-1589",
	"BF-2629",
	"BF-2309",
	"GH-2309",
	"BF-2919",
	"BF-1119",
	"BF-2009",
	"BF-4389",
	"GH-4359",
	"BF-4359",
	"BF-4239",
	"GH-4189",
	"BF-4189",
	"GH-2489",
	"BF-2489",
	"GH-2199",
	"BF-2199",
	"BF-2219",
	"GH-3029",
	"BF-3029",
	"BF-1559",
	"BF-1319",
	"BF-3699",
	"BF-3429",
	"BF-4139",
	"BF-2499",
	"BF-4429",
	"BF-3809",
	"BF-1899",
	"BF-1889",
	"BF-2679",
	"BF-3119",
	"BF-2899",
	"GH-1569",
	"BF-1569",
	"GH-1469",
	"BF-1469",
	"BF-1949",
	"GH-1769",
	"BF-1769",
	"BF-3219",
	"BF-1829",
	"GH-2879",
	"BF-2879",
	"BF-4329",
	"BF-1649",
	"GH-1649",
	"BF-2749",
	"GH-2749",
	"BF-1299",
	"BF-4649",
	"GH-1629",
	"BF-1629",
	"GH-2329",
	"BF-2329",
	"GH-2909",
	"BF-2909",
	"BF-2789",
	"BF-2299",
	"BF-1929",
	"BF-3439",
	"BF-3059",
	"BF-3169",
	"BF-2799",
	"BF-2339",
	"BF-4609",
	"BF-1699",
	"BF-3939",
	"GH-4839",
	"BF-4839",
	"BF-3709",
	"BF-1729",
	"BF-3259",
	"BF-1249",
	"BF-1599",
	"GH-4679",
	"BF-4679",
	"BF-2039",
	"BF-1479",
	"BF-2459",
	"GH-2459",
	"BF-4209",
	"BF-3659",
	"GH-3159",
	"BF-3159",
	"BF-2829",
	"GH-1439",
	"BF-1439",
	"BF-3719",
	"BF-3539",
	"BF-4769",
	"BF-1189",
	"BF-3459",
	"BF-3859",
	"BF-3229",
	"BF-4369",
	"GH-2429",
	"BF-2429",
	"BF-3969",
	"BF-1879",
	"BF-1789",
	"BF-4049",
	"BF-3589",
	"BF-3049",
	"BF-3009",
	"BF-4459",
	"BF-4509",
	"BF-2179",
	"BF-4219",
	"BF-3889",
	"BF-4729",
	"BF-2269",
	"BF-4449",
	"GH-2379",
	"BF-2379",
	"BF-2549",
	"BF-3299",
	"BF-1919",
	"BF-3309",
	"BF-1019",
	"BF-4269",
	"BF-3679",
	"BF-2989",
	"GH-2989",
	"BF-2019",
	"BF-1679",
	"BF-1869",
	"GH-1869",
	"BF-1809",
	"BF-4759",
	"GH-4759",
	"BF-2119",
	"BF-3949",
	"BF-4319",
	"BF-3549",
	"BF-4489",
	"BF-1279",
	"BF-1969",
	"BF-2659",
	"BF-1539",
	"BF-3359",
	"BF-3369",
	"BF-4099",
	"BF-1109",
	"BF-4499",
	"BF-4629",
	"BF-4529",
	"BF-4169",
	"BF-2259",
	"BF-4399",
	"GH-2869",
	"BF-2869",
	"BF-1139",
	"BF-4659",
	"GH-11199",
	"BF-8159",
	"GH-8159",
	"BF-7489",
	"GH-7489",
	"GH-7339",
	"BF-7339",
	"BF-10269",
	"GH-10269",
	"GH-10439",
	"BF-10439",
	"GH-8369",
	"BF-8369",
	"BF-9119",
	"GH-9119",
	"GH-9929",
	"BF-9929",
	"GH-10389",
	"BF-10389",
	"BF-9369",
	"GH-9369",
	"GH-9639",
	"BF-9639",
	"BF-10109",
	"GH-10109",
	"GH-8989",
	"BF-8989",
	"GH-9989",
	"BF-9989",
	"GH-9779",
	"BF-9779",
	"GH-10249",
	"BF-10249",
	"GH-8869",
	"BF-8869",
	"BF-9289",
	"GH-9289",
	"BF-9269",
	"GH-9269",
	"BF-8839",
	"GH-8839",
	"BF-10599",
	"GH-10599",
	"GH-9149",
	"BF-9149",
	"BF-10159",
	"GH-10159",
	"GH-8949",
	"BF-8949",
	"GH-10429",
	"BF-10429",
	"BF-9579",
	"GH-9579",
	"GH-9749",
	"BF-9749",
	"GH-8829",
	"BF-8829",
	"GH-10899",
	"BF-10899",
	"BF-10619",
	"GH-10619",
	"GH-10229",
	"BF-10229",
	"GH-10559",
	"BF-10559",
	"GH-9469",
	"BF-9469",
	"BF-8999",
	"GH-8999",
	"BF-9199",
	"GH-9199",
	"GH-9769",
	"BF-9769",
	"BF-10239",
	"GH-10239",
	"BF-10119",
	"GH-10119",
	"BF-9429",
	"GH-9429",
	"BF-9949",
	"GH-9949",
	"GH-9629",
	"BF-9629",
	"GH-9919",
	"BF-9919",
	"GH-8959",
	"BF-8959",
	"BF-8929",
	"GH-8929",
	"BF-9439",
	"GH-9439",
	"GH-8789",
	"BF-8789",
	"GH-10579",
	"BF-10579",
	"GH-10589",
	"BF-10589",
	"BF-10459",
	"GH-10459",
	"BF-10379",
	"GH-10379",
	"GH-11069",
	"BF-11069",
	"GH-10539",
	"BF-10539",
	"GH-9339",
	"BF-9339",
	"GH-10799",
	"BF-10799",
	"BF-10189",
	"GH-10189",
	"GH-9449",
	"BF-9449",
	"GH-9789",
	"BF-9789",
	"BF-10069",
	"GH-10069",
	"BF-9299",
	"GH-9299",
	"BF-9739",
	"GH-9739",
	"GH-9819",
	"BF-9819",
	"BF-8819",
	"GH-8819",
	"GH-10649",
	"BF-10649",
	"GH-9459",
	"BF-9459",
	"BF-9189",
	"GH-9189",
	"BF-10909",
	"GH-10909",
	"BF-10689",
	"GH-10689",
	"GH-10399",
	"BF-10399",
	"BF-10149",
	"GH-10149",
	"GH-11039",
	"BF-11039",
	"BF-9109",
	"GH-9109",
	"GH-11189",
	"BF-11189",
	"GH-9489",
	"BF-9489",
	"GH-9419",
	"BF-9419",
	"BF-9309",
	"GH-9309",
	"GH-9939",
	"BF-9939",
	"GH-9259",
	"BF-9259",
	"GH-10699",
	"BF-10699",
	"GH-11219",
	"BF-11219",
	"GH-10219",
	"BF-10219",
	"BF-8939",
	"GH-8939",
	"GH-10789",
	"BF-10789",
	"GH-10759",
	"BF-10759",
	"BF-11079",
	"GH-11079",
	"BF-10749",
	"GH-10749",
	"GH-9799",
	"BF-9799",
	"GH-10099",
	"BF-10099",
	"GH-11029",
	"BF-11029",
	"BF-9729",
	"GH-9729",
	"BF-8919",
	"GH-8919",
	"GH-9569",
	"BF-9569",
	"GH-10209",
	"BF-10209",
	"GH-9479",
	"BF-9479",
	"GH-9319",
	"BF-9319",
	"GH-10419",
	"BF-10419",
	"BF-11209",
	"GH-11209",
	"BF-10879",
	"GH-10879",
	"BF-10479",
	"GH-10479",
	"GH-10709",
	"BF-10709",
	"GH-9509",
	"BF-9509",
	"GH-9959",
	"BF-9959",
	"BF-8859",
	"GH-8859",
	"GH-9829",
	"BF-9829",
	"BF-11239",
	"GH-11239",
	"GH-8969",
	"BF-8969",
	"GH-10809",
	"BF-10809",
	"GH-10889",
	"BF-10889",
	"BF-10859",
	"GH-10859",
	"BF-9909",
	"GH-9909",
	"BF-9139",
	"GH-9139",
	"BF-9099",
	"GH-9099",
	"GH-8769",
	"BF-8769",
	"BF-9809",
	"GH-9809",
	"BF-9759",
	"GH-9759",
	"GH-11109",
	"BF-11109",
	"GH-10059",
	"BF-10059",
	"GH-9519",
	"BF-9519",
	"GH-10279",
	"BF-10279",
	"BF-8879",
	"GH-8879",
	"GH-10919",
	"BF-10919",
	"GH-10739",
	"BF-10739",
	"GH-9249",
	"BF-9249",
	"GH-8729",
	"BF-8729",
	"GH-9619",
	"BF-9619",
	"GH-8979",
	"BF-8979",
	"BF-9889",
	"GH-9889",
	"GH-9599",
	"BF-9599",
	"BF-10629",
	"GH-10629",
	"BF-11019",
	"GH-11019",
	"GH-10139",
	"BF-10139",
	"BF-9089",
	"GH-9089",
	"GH-10769",
	"BF-10769",
	"GH-11099",
	"BF-11099",
	"GH-10819",
	"BF-10819",
	"GH-9159",
	"BF-9159",
	"BF-10949",
	"GH-10949",
	"GH-11229",
	"BF-11229",
	"GH-11119",
	"BF-11119",
	"GH-11059",
	"BF-11059",
	"GH-8809",
	"BF-8809",
	"GH-10849",
	"BF-10849",
	"BF-10049",
	"GH-10049",
	"BF-10729",
	"GH-10729",
	"BF-8799",
	"GH-8799",
	"GH-8779",
	"BF-8779",
	"BF-9279",
	"GH-9279",
	"BF-9019",
	"GH-9019",
	"GH-9409",
	"BF-9409",
	"BF-11049",
	"GH-11049",
	"BF-11179",
	"GH-11179",
	"GH-10719",
	"BF-10719",
	"GH-10259",
	"BF-10259",
	);
    my @oldlist12 = (
	"GH-1079",
	"GH-2329",
	"GH-3159",
	"GH-4839",
	"GH-1199",
	"GH-2349",
	"GH-3269",
	"GH-4869",
	"GH-1439",
	"GH-2359",
	"GH-3349",
	"GH-4879",
	"GH-1469",
	"GH-2379",
	"GH-3389",
	"GH-4889",
	"GH-1489",
	"GH-2429",
	"GH-3739",
	"GH-4899",
	"GH-1509",
	"GH-2459",
	"GH-3989",
	"GH-4909",
	"GH-1569",
	"GH-2469",
	"GH-4029",
	"GH-5019",
	"GH-1629",
	"GH-2489",
	"GH-4069",
	"GH-5219",
	"GH-1649",
	"GH-2749",
	"GH-4189",
	"GH-5349",
	"GH-1769",
	"GH-2869",
	"GH-4309",
	"GH-5399",
	"GH-1779",
	"GH-2879",
	"GH-4359",
	"GH-5459",
	"GH-1869",
	"GH-2909",
	"GH-4469",
	"GH-5539",
	"GH-2069",
	"GH-2929",
	"GH-4679",
	"GH-5549",
	"GH-2079",
	"GH-2959",
	"GH-4689",
	"GH-5559",
	"GH-2199",
	"GH-2989",
	"GH-4759",
	"GH-2239",
	"GH-3029",
	"GH-4789",
	"GH-2309",
	"GH-3069",
	"GH-4829"
	);
    foreach $idir (@list12) {
	$dir = "results-" . $idir;
	$command = "bin/runPlot -y 2016GH -d se -p overlays -m dbxplot -s $idir >& /dev/null &";
	print "$command\n";
	system($command);
	$njobs = countRunningJobs("dbxplot");
	print "njobs running: $njobs\n";
	while ($njobs > $optn) {
	    print "sleep for $optt before testing again\n";
	    sleep($optt);
	    $njobs = countRunningJobs("dbxplot");
	    print "njobs running: $njobs\n";
	}
    }
    exit(0);
}

# -- default: run something on all 4 years
my $log = "";
if ($optd ne "") {
    $log = "-$opt_x";
}
foreach $year (@years) {
    print "running: bin/runPlot -y $year $optd $optp $optm >& runPlots$log-$opt_p-$opt_m-$year.log & \n";
    if (-e "$optp-$optm-$year.log") {
	unlink("$optp-$optm-$year.log");
    }
    system("bin/runPlot -y $year $optd $optp $optm >& runPlots$log-$opt_p-$opt_m-$year.log &");
}



# ----------------------------------------------------------------------
sub countRunningJobs() {
    ($jobname) = @_;
    print "ps -fu ursl | /bin/grep $jobname | wc\n";
    $line = `ps -fu ursl | /bin/grep runPlot | /bin/grep $jobname | wc`;
    chop($line);
    print "line ->$line<-\n";
    $line =~ s/\s{2,99}/:/g;
    $line =~ s/^://;
    ($n, $nw, $nl) = split(/:/, $line, 3);
    $n -= 1;
    print "n = ->$n<- \n";
    return $n;
}
