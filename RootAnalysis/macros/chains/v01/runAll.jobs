my $version = "v01";

my $dataset = "bla";
my $mode    = "bla";
my $pattern = "bla"; 

# -- output directory
my $SCRATCH = "/scratch/$ENV{'USER'}/bmm4/$version";
# -- grid SE prefix
my $PSI = $ENV{'PSI'};
$PSI =~ s/\?/\\\?/g;
print "PSI = $PSI\n";
if ($PSI eq "") {
    die "PSI not defined, but required ...\n";
}
my $LFN = "/store/user/$USER/bmm4/runBmm/$version/";
my $SEDIR = "$PSI/$LFN";

# -- did not manage to do this with refs, so do it with functions: 
sub runCommand() {
    $runCmd  = "$BMMBASE/perl/run -t $opt_t -c $BMMBASE/RootAnalysis/macros/runBmmNoComp.csh ";
    $runCmd .= "-r 'PFNS $PSI%STORAGE1 $LFN".$dataset."%SITE T3_CH_PSI' ";
    return $runCmd;
}   

sub mCC() {
    return " && $BMMBASE/perl/mkCheckedChain $mode && rm  $mode; ";
}

sub srmHadd() {
    ($lmode) = @_;
    return "$BMMBASE/perl/srmHadd $merges{$lmode} -o $SCRATCH/$lmode.root";
}

# ######################
# -- define all the jobs
# ######################
%jobs = ();
tie %jobs, "Tie::IxHash";

%catalogs = (); 
tie %catalogs, "Tie::IxHash";

# -----------------------------------------------
$dataset = "Run2015B__Charmonium__PromptReco-v1"; 
# -----------------------------------------------
$mode = "bmm-$version-prompt-$dataset"; $pattern = "bmm-prompt-Run2015B";
$jobs{$mode}   = "cd jobs && ".&runCommand." -m batch -q short.q -x 'bin/runBmm -C cuts/bmmReader.2015' c$mode-*  && cd - ";
$catalogs{$mode} = "srmLs -x srm://t3se01.psi.ch:8443/srm/managerv2\\?SFN=/pnfs/psi.ch/cms/trivcat/store/user/$USER/bmm4/cmsRun/$version/$dataset -c -p $pattern | sort > $mode " . &mCC;
$catalogs{$mode} .= "$BMMBASE/perl/splitCheckedChain -n 50000 c$mode && rm c$mode && rm checkChain.C";
$merges{$mode} = "-x $SEDIR/$dataset -p $mode";

# ----------------------------
$dataset = "Summer15_private";
# ----------------------------
$mode = "bmm-$version-$dataset-PYTHIA8_Bs2MuMu_NoFilter";  $pattern = "$dataset-PYTHIA8_Bs2MuMu_NoFilter";
$jobs{$mode}  = "cd jobs && ".&runCommand."  -m batch -q short.q -x 'bin/runBmm -m -C cuts/bmmReader.mix-Bs2MuMu' c$mode-*  && cd - ";
$catalogs{$mode} = "srmLs -x srm://t3se01.psi.ch:8443/srm/managerv2\\?SFN=/pnfs/psi.ch/cms/trivcat/store/user/$USER/bmm4/cmsRun/gentest -c -p $pattern | sort > $mode " . &mCC;
$catalogs{$mode} .= "$BMMBASE/perl/splitCheckedChain -n 20000 c$mode && rm c$mode && rm checkChain.C";
$merges{$mode} = "-x $SEDIR/$dataset -p $pattern";

$mode = "bmm-$version-$dataset-PYTHIA8_Bs2MuMu_EtaPtFilter"; $pattern = "$dataset-PYTHIA8_Bs2MuMu_EtaPtFilter";
$jobs{$mode}  = "cd jobs && ".&runCommand."  -m batch -q short.q -x 'bin/runBmm -m -C cuts/bmmReader.mix-Bs2MuMu' c$mode-*  && cd - ";
$catalogs{$mode} = "srmLs -x srm://t3se01.psi.ch:8443/srm/managerv2\\?SFN=/pnfs/psi.ch/cms/trivcat/store/user/$USER/bmm4/cmsRun/gentest -c -p $pattern | sort > $mode " . &mCC;
$catalogs{$mode} .= "$BMMBASE/perl/splitCheckedChain -n 20000 c$mode && rm c$mode && rm checkChain.C";
$merges{$mode} = "-x $SEDIR/$dataset -p $pattern";

$mode = "bmm-$version-$dataset-PYTHIA8_Bu2JpsiK_NoFilter";  $pattern = "$dataset-PYTHIA8_Bu2JpsiK_NoFilter";
$jobs{$mode}  = "cd jobs && ".&runCommand."  -m batch -q short.q -x 'bin/runBmm -m -C cuts/bmmReader.mix-Bu2JpsiK' c$mode-*  && cd - ";
$catalogs{$mode} = "srmLs -x srm://t3se01.psi.ch:8443/srm/managerv2\\?SFN=/pnfs/psi.ch/cms/trivcat/store/user/$USER/bmm4/cmsRun/gentest -c -p $pattern | sort > $mode " . &mCC;
$catalogs{$mode} .= "$BMMBASE/perl/splitCheckedChain -n 20000 c$mode && rm c$mode && rm checkChain.C";
$merges{$mode} = "-x $SEDIR/$dataset -p $pattern";

$mode = "bmm-$version-$dataset-PYTHIA8_Bu2JpsiK_EtaPtFilter"; $pattern = "$dataset-PYTHIA8_Bu2JpsiK_EtaPtFilter";
$jobs{$mode}  = "cd jobs && ".&runCommand."  -m batch -q short.q -x 'bin/runBmm -m -C cuts/bmmReader.mix-Bu2JpsiK' c$mode-*  && cd - ";
$catalogs{$mode} = "srmLs -x srm://t3se01.psi.ch:8443/srm/managerv2\\?SFN=/pnfs/psi.ch/cms/trivcat/store/user/$USER/bmm4/cmsRun/gentest -c -p $pattern | sort > $mode " . &mCC;
$catalogs{$mode} .= "$BMMBASE/perl/splitCheckedChain -n 20000 c$mode && rm c$mode && rm checkChain.C";
$merges{$mode} = "-x $SEDIR/$dataset -p $pattern";
