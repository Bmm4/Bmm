my $version = "s02";
my $vda     = "v10";
my $vmc     = "v10";

my $dataset = "bla";
my $mode    = "bla";
my $pattern = "bla";


my $year = 0;
my @mceras = ();
my %modes = ();
tie %modes, "Tie::IxHash";

# -- output directory
$SCRATCH = "/scratch/$ENV{'USER'}/bmm4/$version";
# -- grid SE prefix
my $PSI = $ENV{'PSI'};
$PSI =~ s/\?/\\\?/g;
if ($PSI eq "") {
    die "PSI not defined, but required ...\n";
}
my $LFN = "/store/user/$USER/bmm4/runBmm/$version/";
my $SEDIR = "$LFN";

# -- edit the following if you produced your own T1 trees with cmsRun:
my $T1LOC = "/store/user/ursl/bmm4/cmsRun";

# -- did not manage to do this with refs, so do it with functions:
sub runCommand() {
    $runCmd  = "$BMMBASE/perl/run $opt_C $opt_q -t $opt_t -c $BMMBASE/RootAnalysis/macros/runBmmNoComp.csh ";
    $runCmd .= "-r 'PFNS $PSI%STORAGE1 $LFN".$dataset."%SITE T3_CH_PSI' ";
    return $runCmd;
}

sub runPlotCommand() {
    $runCmd  = "$BMMBASE/perl/run -t $opt_t -c $BMMBASE/RootAnalysis/macros/runPlotNoComp.csh ";
    $runCmd .= "-r 'PFNS $PSI%STORAGE1 $LFN".$dataset."%SITE T3_CH_PSI' ";
    return $runCmd;
}

sub mCC() {
    return " && $BMMBASE/perl/mkCheckedChain $mode ; ";
}

sub srmHadd() {
    ($lmode) = @_;
    if ($opt_w) {
	return "$BMMBASE/perl/srmHadd $merges{$lmode} -o $SCRATCH/$lmode-$opt_w.root";
    } else {
	return "$BMMBASE/perl/srmHadd $merges{$lmode} -o $SCRATCH/$lmode.root";
    }
}

# ######################
# -- define all the jobs
# ######################
%jobs = ();
tie %jobs, "Tie::IxHash";

%catalogs = ();
tie %catalogs, "Tie::IxHash";

my $NDA = 800000;
my $NMC = 200000;
my $NHA = 100000;

# -----------------------------------------------
# -- combinations
# -----------------------------------------------
#$combine{"bmmCharmonium2016"} = "cd $SCRATCH; hadd -f bmm-data-bmmCharmonium2016-$version.root bmm-data-bmmCharmonium2016?-*.root; cd -  ";
$combine{"bmmCharmonium2016BF"} = "cd $SCRATCH; hadd -f bmm-data-bmmCharmonium2016BF-$version.root bmm-data-bmmCharmonium2016B-$version.root bmm-data-bmmCharmonium2016C-$version.root bmm-data-bmmCharmonium2016D-$version.root bmm-data-bmmCharmonium2016E-$version.root bmm-data-bmmCharmonium2016F-$version.root; cd -  ";
$combine{"bmmCharmonium2016GH"} = "cd $SCRATCH; hadd -f bmm-data-bmmCharmonium2016GH-$version.root bmm-data-bmmCharmonium2016G-$version.root bmm-data-bmmCharmonium2016H-$version.root; cd -  ";

$combine{"combined"} = "cd $SCRATCH; cp bmm-mc-Summer16_private-BdToPiMuNu-2016BF-$version.root bmm-mc-combined-BdToPiMuNu-2016BF-$version.root; cd - ; ";
$combine{"combined"} .= "cd $SCRATCH; cp bmm-mc-Summer16_private-BdToPiMuNu-2016GH-$version.root bmm-mc-combined-BdToPiMuNu-2016GH-$version.root; cd - ; ";

$combine{"combined"} .= "cd $SCRATCH; hadd -f bmm-mc-combined-LbToPMuNu-2016BF-$version.root bmm-mc-Summer16_private-LbToPMuNu-2016BF-$version.root bmm-mc-RunIISpring16DR80-LbToPMuNu_BMuonFilter-2016BF-$version.root; cd - ; ";
$combine{"combined"} .= "cd $SCRATCH; hadd -f bmm-mc-combined-LbToPMuNu-2016GH-$version.root bmm-mc-Summer16_private-LbToPMuNu-2016GH-$version.root bmm-mc-RunIISpring16DR80-LbToPMuNu_BMuonFilter-2016GH-$version.root; cd - ; ";

$combine{"combined"} .= "cd $SCRATCH; cp bmm-mc-Summer16_private-BsToKMuNu-2016BF-$version.root bmm-mc-combined-BsToKMuNu-2016BF-$version.root; cd - ; ";
$combine{"combined"} .= "cd $SCRATCH; cp bmm-mc-Summer16_private-BsToKMuNu-2016GH-$version.root bmm-mc-combined-BsToKMuNu-2016GH-$version.root; cd - ; ";

$combine{"combined"} .= "cd $SCRATCH; hadd -f bmm-mc-combined-BsToMuMu-2016BF-$version.root bmm-mc-Summer16_private-BsToMuMu-2016BF-$version.root bmm-mc-RunIISpring16DR80-BsToMuMu_BMuonFilter-2016BF-$version.root; cd - ; ";
$combine{"combined"} .= "cd $SCRATCH; hadd -f bmm-mc-combined-BsToMuMu-2016GH-$version.root bmm-mc-Summer16_private-BsToMuMu-2016GH-$version.root bmm-mc-RunIISpring16DR80-BsToMuMu_BMuonFilter-2016GH-$version.root; cd - ; ";

$combine{"combined"} .= "cd $SCRATCH; hadd -f bmm-mc-combined-BdToMuMu-2016BF-$version.root bmm-mc-Summer16_private-BdToMuMu-2016BF-$version.root bmm-mc-RunIISpring16DR80-BdToMuMu_BMuonFilter-2016BF-$version.root; cd - ; ";
$combine{"combined"} .= "cd $SCRATCH; hadd -f bmm-mc-combined-BdToMuMu-2016GH-$version.root bmm-mc-Summer16_private-BdToMuMu-2016GH-$version.root bmm-mc-RunIISpring16DR80-BdToMuMu_BMuonFilter-2016GH-$version.root; cd - ; ";

$combine{"combined"} .= "cd $SCRATCH; hadd -f bmm-mc-combined-BuToJpsiKp-2016BF-$version.root bmm-mc-Summer16_private-BuToJpsiKp-2016BF-$version.root bmm-mc-RunIISpring16DR80-BuToJpsiK_BMuonFilter-2016BF-$version.root ; cd - ; ";
$combine{"combined"} .= "cd $SCRATCH; hadd -f bmm-mc-combined-BuToJpsiKp-2016GH-$version.root bmm-mc-Summer16_private-BuToJpsiKp-2016GH-$version.root bmm-mc-RunIISpring16DR80-BuToJpsiK_BMuonFilter-2016GH-$version.root ; cd - ; ";

$combine{"combined"} .= "cd $SCRATCH; hadd -f bmm-mc-combined-BsToJpsiPhi-2016BF-$version.root bmm-mc-Summer16_private-BsToJpsiPhi-2016BF-$version.root bmm-mc-RunIISpring16DR80-BsToJpsiPhi_BMuonFilter-2016BF-$version.root ; cd - ; ";
$combine{"combined"} .= "cd $SCRATCH; hadd -f bmm-mc-combined-BsToJpsiPhi-2016GH-$version.root bmm-mc-Summer16_private-BsToJpsiPhi-2016GH-$version.root bmm-mc-RunIISpring16DR80-BsToJpsiPhi_BMuonFilter-2016GH-$version.root ; cd - ; ";


# ----------------------------------------------------------------------
# 2016
# ----------------------------------------------------------------------
my @list2016 = ("B", "C", "D", "E", "F", "G", "H");
# -- BMM
foreach $let (@list2016) {
    $dataset = "bmmCharmonium2016$let";
    $mode = "bmm-data-$dataset-$version"; $pattern = "bmm-legacy-Run2016";
    $era = "BF$version";
    if ($let eq "G" || $let eq "H") {$era = "GH$version";}
    # $jobs{$mode}   = "cd $mode && ".&runCommand." -x 'bin/runBmm -y 2016 -e $era -C cuts/bmmReader.2016' c$mode-*  && cd - ";
    &addModeToJobs($mode, " -x 'bin/runBmm -y 2016 -e $era -C cuts/bmmReader.2016 ' ");
    $catalogs{$mode} = "$BMMBASE/perl/srmLs -x $T1LOC/$vda/$dataset -c -p $pattern | sort > $mode " . &mCC;
    $catalogs{$mode} .= "$BMMBASE/perl/splitCheckedChain -n $NMC c$mode && rm checkChain.C";
    $merges{$mode} = "-x $SEDIR/$dataset -p $mode";
}

# -----------------------------------------------
$dataset = "RunIISpring16DR80";  # 2016 "BAD" official
# -----------------------------------------------
$year = 2016;
@mceras = ();
@mceras = ("BF", "GH");
%modes = ();
%modes = (
    "BsToMuMu"                  => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_BMuonFilter"      => "bmmReader.mix-Bs2MuMu",
    "BdToMuMu"                  => "bmmReader.mix-Bd2MuMu",
    "BdToMuMu_BMuonFilter"      => "bmmReader.mix-Bd2MuMu",
    "BsToMuMu_m5p7_BMuonFilter" => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_m5p1_BMuonFilter" => "bmmReader.mix-Bs2MuMu",
    "BuToJpsiK"                 => "bmmReader.mix-Bu2JpsiK",
    "BuToJpsiK_BMuonFilter"     => "bmmReader.mix-Bu2JpsiK",
    "BsToJpsiPhi"               => "bmmReader.mix-Bs2JpsiPhi",
    "BsToJpsiPhi_BMuonFilter"   => "bmmReader.mix-Bs2JpsiPhi",
    "BdToKPi"                   => "bmmReader.mix-Bd2KPi",
    "BdToKPi_BMuonFilter"       => "bmmReader.mix-Bd2KPi",
    "BdToPiPi_BMuonFilter"      => "bmmReader.mix-Bd2PiPi",
    "BdToKK_BMuonFilter"        => "bmmReader.mix-Bd2KK",
    "BsToKK"                    => "bmmReader.mix-Bs2KK",
    "BsToKK_BMuonFilter"        => "bmmReader.mix-Bs2KK",
    "BsToKPi_BMuonFilter"       => "bmmReader.mix-Bs2KPi",
    "BsToPiPi_BMuonFilter"      => "bmmReader.mix-Bs2PiPi",
    "LbToPMuNu_BMuonFilter"     => "bmmReader.mix-Lb2PMuNu",
    "LbToPMuNu"                 => "bmmReader.mix-Lb2PMuNu",
    "LbToPPi_BMuonFilter"       => "bmmReader.mix-Lb2PPi",
    "LbToPK"                    => "bmmReader.mix-Lb2PK"
    );

foreach $mds (keys %modes) {
    my $odd = "-e";
    foreach $era (@mceras) {
	$mode = "bmm-mc-$dataset-$mds-$year$era-$version";  ($pattern = $mode) =~ s/$year$era-$version/$vmc/g;
 	# $jobs{$mode}   = "cd $mode && ".&runCommand." -x 'bin/runBmm -y 2016 -e $era$version -C cuts/$modes{$mds} -m' c$mode-*  && cd - ";
	&addModeToJobs($mode, " -x 'bin/runBmm -y 2016 -e $era$version -C cuts/$modes{$mds} -m ' ");
	if ($era eq "GH") {
	    $odd = "-o";
	} else {
	    $odd = "-e";
	}
	$catalogs{$mode} = "$BMMBASE/perl/srmLs -x $T1LOC/$vmc/$dataset $odd -c -p $pattern | sort > $mode " . &mCC;
	$catalogs{$mode} .= "$BMMBASE/perl/splitCheckedChain -n $NMC c$mode && rm checkChain.C";
	$merges{$mode} = "-x $SEDIR/$dataset -p $mode";
    }
}


# -----------------------------------------------
$dataset = "Summer16_private";   # 2016 private
# -----------------------------------------------
$year = 2016;
@mceras = ();
@mceras = ("BF", "GH");
%modes = ();
%modes = (
    "BdToMuMu"                  => "bmmReader.mix-Bd2MuMu",
    "BsToMuMu"                  => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm35"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm40"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm45"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm50"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm55"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm60"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm65"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm66"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm67"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm68"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm69"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm70"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm75"           => "bmmReader.mix-Bs2MuMu",
    "BsToMuMu_bsmm80"           => "bmmReader.mix-Bs2MuMu",
    "BuToJpsiKp"                => "bmmReader.mix-Bu2JpsiK",
    "BsToJpsiPhi"               => "bmmReader.mix-Bs2JpsiPhi",
    "BdToJpsiKstar"             => "bmmReader.mix-Bd2JpsiKstar",
    "BdToJpsiKstarAcc"          => "bmmReader.mix-Bd2JpsiKstar",
    "BdToJpsiKstarHiPt"         => "bmmReader.mix-Bd2JpsiKstar",
    "BsToJpsif0"                => "bmmReader.mix-Bs2Jpsif0",
    "BsToJpsif0Acc"             => "bmmReader.mix-Bs2Jpsif0",
    "BcToJpsiMuNu"              => "bmmReader.mix-Bc2JpsiMuNu",
    "BdToPiMuNuAcc"             => "bmmReader.mix-Bd2PiMuNu",
    "BdToPiMuNu"                => "bmmReader.mix-Bd2PiMuNu",
    "BdToPiMuMuAcc"             => "bmmReader.mix-Bd2PiMuMu",
    "BdToPiMuMu"                => "bmmReader.mix-Bd2PiMuMu",
    "BuToPiMuMuAcc"             => "bmmReader.mix-Bu2PiMuMu",
    "BuToPiMuMu"                => "bmmReader.mix-Bu2PiMuMu",
    "BsToKMuNuAcc"              => "bmmReader.mix-Bs2KMuNu",
    "BsToKMuNu"                 => "bmmReader.mix-Bs2KMuNu",
    "LbToPK"                    => "bmmReader.mix-Lb2PK",
    "LbToPMuNu"                 => "bmmReader.mix-Lb2PMuNu"
    );

foreach $mds (keys %modes) {
    my $odd = "-e";
    foreach $era (@mceras) {
	$mode = "bmm-mc-$dataset-$mds-$year$era-$version";  ($pattern = $mode) =~ s/$year$era-$version/$vmc/g;
	# $jobs{$mode}   = "cd $mode && ".&runCommand." -x 'bin/runBmm -y 2016 -e $era$version -C cuts/$modes{$mds} -m' c$mode-*  && cd - ";
	&addModeToJobs($mode, " -x 'bin/runBmm -y 2016 -e $era$version -C cuts/$modes{$mds} -m ' ");
	if ($era eq "GH") {
	    $odd = "-o";
	} else {
	    $odd = "-e";
	}
	$catalogs{$mode} = "$BMMBASE/perl/srmLs -x $T1LOC/$vmc/$dataset $odd -c -p $pattern | sort > $mode " . &mCC;
	$catalogs{$mode} .= "$BMMBASE/perl/splitCheckedChain -n $NMC c$mode && rm checkChain.C";
	$merges{$mode} = "-x $SEDIR/$dataset -p $mode";
    }
}
